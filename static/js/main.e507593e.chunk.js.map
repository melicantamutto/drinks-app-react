{"version":3,"sources":["components/Header.jsx","context/CategoriesContext.js","context/RecipesContext.js","components/Form.jsx","context/ModalContext.js","components/Recipe.jsx","components/RecipesList.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","className","CategoriesContext","createContext","CategoriesProvider","props","useState","categories","setCategories","useEffect","a","axios","get","console","log","data","drinks","getCategories","Provider","value","children","RecipesContext","RecipesProvider","nameRecipe","category","searchRecipes","setSearchRecipes","recipes","setRecipes","consult","setConsult","url","resultRecipes","getRecipes","Form","useContext","search","setSearch","error","setError","getDataRecipes","e","target","name","onSubmit","preventDefault","trim","length","setTimeout","handlerSubmit","type","placeholder","onChange","map","strCategory","ModalContext","ModalProvider","idRecipe","setIdRecipe","getRecipe","setGetRecipe","fetchRecipe","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Recipe","recipe","strDrink","strDrinkThumb","idDrink","classes","open","setOpen","top","left","transform","modalStyle","handleModal","src","alt","onClick","onClose","style","strInstructions","obj","ingredients","i","push","ShowIngredients","RecipesList","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e507593e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n    return (\n        <header className=\"bg-alert\">\n        {\" \"}\n        <h1>Busca recetas de bebidas</h1>{\" \"}\n        </header>\n    );\n};\n\nexport default Header;\n","import { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nexport const CategoriesContext = createContext();\n\nconst CategoriesProvider = (props) => {\n    const [categories, setCategories] = useState([]);\n    useEffect(() => {\n       const getCategories = async () =>{\n           const url = `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`\n           const categories = await axios.get(url)\n           console.log(categories.data.drinks);\n           setCategories(categories.data.drinks)\n       }\n       getCategories()\n    }, []);\n    return (\n        <CategoriesContext.Provider value={{categories}}>\n        {props.children}\n        </CategoriesContext.Provider>\n    );\n};\n\nexport default CategoriesProvider;","import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const RecipesContext = createContext();\n\nconst RecipesProvider = (props) => {\n  const [searchRecipes, setSearchRecipes] = useState({\n    nameRecipe: \"\",\n    category: \"\",\n  });\n  const [recipes, setRecipes] = useState([]);\n  const [consult, setConsult] = useState(false);\n  const { nameRecipe, category } = searchRecipes;\n\n  useEffect(() => {\n    if (consult) {\n      const getRecipes = async () => {\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nameRecipe}&c=${category}`;\n        const resultRecipes = await axios.get(url);\n        console.log(resultRecipes.data.drinks);\n        setRecipes(resultRecipes.data.drinks);\n      };\n      getRecipes();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [consult]);\n  return (\n    <RecipesContext.Provider value={{ setSearchRecipes, recipes, setConsult }}>\n      {props.children}\n    </RecipesContext.Provider>\n  );\n};\n\nexport default RecipesProvider;\n","import { useState, useContext } from \"react\";\nimport { CategoriesContext } from \"../context/CategoriesContext\";\nimport { RecipesContext } from \"../context/RecipesContext\";\n\nconst Form = () => {\n  const { categories } = useContext(CategoriesContext);\n  const { setSearchRecipes, setConsult } = useContext(RecipesContext);\n  const [search, setSearch] = useState({\n    nameRecipe: \"\",\n    category: \"\",\n  });\n  const [error, setError] = useState(false);\n\n  const getDataRecipes = (e) => {\n    setSearch({ ...search, [e.target.name]: e.target.value });\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if (search.category === \"\" && search.nameRecipe.trim().length === 0) {\n      setError(true);\n      setTimeout(() => {\n        setError(false);\n      }, 1500);\n      return;\n    }\n    setSearchRecipes(search);\n    setConsult(true);\n  };\n\n  return (\n    <form className=\"col-12\" onSubmit={(e) => handlerSubmit(e)}>\n      <fieldset className=\"text-center\">\n        <legend>Busca bebidas por categoría o ingrediente</legend>\n      </fieldset>\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"nameRecipe\"\n            className=\"form-control\"\n            placeholder={error ? \"¡Escríbeme!\" : \"Buscar por Ingrediente\"}\n            onChange={getDataRecipes}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <select\n            name=\"category\"\n            className=\"form-control\"\n            onChange={getDataRecipes}\n          >\n            {error ? (\n              <option value=\"categoria\"> ¡Seleccioname! </option>\n            ) : (\n              <option value=\"categoria\">--Buscar por Categoría--</option>\n            )}\n            {categories.map((category) => (\n              <option key={category.strCategory} value={category.strCategory}>\n                {category.strCategory}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"col-md-4\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-block btn-primary\"\n            value=\"Buscar Recetas\"\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const ModalContext = createContext();\n\nconst ModalProvider = (props) => {\n  const [idRecipe, setIdRecipe] = useState(null);\n  const [getRecipe, setGetRecipe] = useState({});\n\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      if (!idRecipe) return;\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idRecipe}`;\n      const recipes = await axios.get(url);\n      console.log(recipes.data.drinks[0]);\n      setGetRecipe(recipes.data.drinks[0]);\n    };\n    fetchRecipe();\n  }, [idRecipe]);\n  return (\n    <ModalContext.Provider value={{ setIdRecipe, getRecipe, setGetRecipe }}>\n      {props.children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import { useContext, useState } from \"react\";\nimport { ModalContext } from \"../context/ModalContext\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst Recipe = ({ recipe: { strDrink, strDrinkThumb, idDrink } }) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [modalStyle]= useState(getModalStyle());\n  const { setIdRecipe, setGetRecipe, getRecipe } = useContext(ModalContext);\n\n  const handleModal = () => setOpen(!open);\n\n  const ShowIngredients = (obj) => {\n    let ingredients = [];\n    for (let i = 1; i < 16; i++) {\n      if (obj[`strIngredient${i}`]) {\n        ingredients.push(\n          <li>\n            {obj[`strIngredient${i}`]}\n            {`: `}\n            {obj[`strMeasure${i}`]}\n          </li>\n        );\n      }\n    }\n  };\n  return (\n    <div className=\"col-md-4 mb-3\">\n      <div className=\"card\">\n        <h2 className=\"card-header\">{strDrink}</h2>\n        <img src={strDrinkThumb} alt={strDrink} className=\"card-img-top\" />\n        <div className=\"card-body\">\n          <button\n            type=\"button\"\n            className=\"btn btn-block btn-danger\"\n            onClick={() => {\n              setIdRecipe(idDrink);\n              handleModal();\n            }}\n          >\n            Ver receta\n          </button>\n          <Modal\n            open={open}\n            onClose={() => {\n              setIdRecipe(null);\n              setGetRecipe({});\n              handleModal();\n            }}\n          >\n            <div style={modalStyle} className={classes.paper}>\n              <h2>{getRecipe.strDrink}</h2>\n              <h3 className=\"mt-4\">Instrucciones</h3>\n              <p>{getRecipe.strInstructions}</p>\n              <img\n                src={getRecipe.strDrinkThumb}\n                alt={`Imagen de: ${getRecipe.strDrink}`}\n                className=\"img-fluid my-4\"\n              />\n              <h3>Ingredientes y cantidades</h3>\n              <ul>{ShowIngredients(getRecipe)}</ul>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import {useContext} from 'react';\nimport { RecipesContext } from \"../context/RecipesContext\";\nimport Recipe from './Recipe'\n\nconst RecipesList = () => {\n\n    const {recipes} = useContext(RecipesContext)\n\n    return (\n        <div className=\"row mt-5\">\n            {recipes.map(recipe =>(<Recipe key={recipe.idDrink} recipe={recipe}/>))}\n        </div>\n    );\n};\n\nexport default RecipesList;","import Header from './components/Header';\nimport Form from './components/Form';\nimport RecipesList from './components/RecipesList';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <Form />\n        </div>\n        <RecipesList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport CategoriesProvider from \"./context/CategoriesContext\";\nimport RecipesProvider from \"./context/RecipesContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CategoriesProvider>\n      <RecipesProvider>\n        <ModalProvider>\n          <App />\n        </ModalProvider>\n      </RecipesProvider>\n    </CategoriesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}